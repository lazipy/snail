<template>
  <view class="container">
    <view class="content">
      <view class="no-data"
            wx:if="{{groupList && groupList.length === 0}}">
        <image src="../assets/img/reword.png"
               mode="scaleToFill"
               lazy-load="false">
        </image>
        <view class="no-text" @tap="addGroup">您当前暂无账号类型，<text>去添加</text></view>
      </view>
      <view class="list" wx:if="{{groupList && groupList.length > 0}}">
        <repeat for="{{groupList}}"
                key="index"
                index="index"
                item="item">
          <view class="card"
                @tap="checkAccount({{item}})">
            <image src="{{item.logo || '../assets/img/icon-group.png'}}"
                   mode="scaleToFill"
                   lazy-load="false">
            </image>
            <view class="intro">
              <view class="label">{{item.name}}</view>
              <view class="description">{{item.description}}</view>
            </view>
            <view class="actions">
              <view class="time">{{item.date}}</view>
              <image class="setting"
                     id="setting"
                     @tap="handleSet({{item}})"
                     src="../assets/img/setting.png"
                     mode="scaleToFill"
                     lazy-load="false">
              </image>
            </view>
          </view>
        </repeat>
      </view>
    </view>
    <i-action-sheet visible="{{ visible }}"
                    actions="{{ actions }}"
                    show-cancel
                    bind:cancel="handleCancel"
                    bind:click="handleClickItem" />
    <tab-bar current="group" />
    <i-message id="message" />
  </view>
</template>

<script>
  import wepy from 'wepy'
  import dayjs from 'dayjs'
  import { queryGroupByUserId, deleteGroup } from '../services/group'
  import { $Message } from '../iview/base/index'
  import TabBar from '@/components/TabBar'

  export default class Group extends wepy.page {
    config = {
      navigationBarTitleText: '账号类型'
    }
    components = {
      'tab-bar': TabBar
    }
    data = {
      userInfo: null,
      groupList: null,
      activeGroup: null,
      visible: false,
      actions: [{ name: '编辑类型', color: '#6f7bfd' }, { name: '删除类型', color: '#ed3f14' }]
    }
    onShow() {
      this.userInfo = wx.getStorageSync('userInfo')
      this.getData()
    }
    methods = {
      addGroup() {
        wx.navigateTo({
          url: './add-group'
        })
      },
      checkAccount(item, e) {
        if (e.target.id) return
        wx.navigateTo({
          url: `./account-list?groupId=${item._id}`
        })
      },
      handleSet(item) {
        this.visible = true
        this.activeGroup = item
      },
      handleClickItem(e) {
        this.visible = false
        if (e.detail.index === 0) {
          wx.navigateTo({
            url: `./edit-group?groupId=${this.activeGroup._id}`
          })
        }
        if (e.detail.index === 1) {
          this.deleteData()
        }
      },
      handleCancel() {
        this.visible = false
      }
    }
    // 获取数据
    getData() {
      wx.showLoading({ title: '加载中...', mask: true })
      queryGroupByUserId(this.userInfo._id)
        .then(res => {
          wx.hideLoading()
          this.groupList = res.data.map(item => {
            item.date = dayjs(item.updated_at).format('YYYY-MM-DD')
            return item
          })
          this.$apply()
        })
        .catch(err => {
          console.log(err)
        })
    }
    // 删除分组
    deleteData() {
      const _self = this
      wx.showModal({
        title: '提示',
        content: '删除类型，同时将删除该类型下的账号，您确定要删除吗？',
        cancelColor: '#999999',
        confirmColor: '#6f7bfd',
        success(res) {
          if (res.confirm) {
            wx.showLoading({ title: '删除中...', mask: true })
            deleteGroup(_self.activeGroup._id)
              .then(res => {
                wx.hideLoading()
                const index = _self.groupList.findIndex(item => item._id === _self.activeGroup._id)
                _self.groupList.splice(index, 1)
                $Message({
                  content: '删除类型成功',
                  type: 'success'
                })
                _self.$apply()
              })
              .catch(err => {
                $Message({
                  content: '删除类型失败',
                  type: 'error'
                })
                console.log(err)
              })
          }
        }
      })
    }
  }
</script>

<style lang="scss" scoped>
  .container {
    display: flex;
    flex-direction: column;
    height: 100vh;
    padding-bottom: 50px;
    .content {
      padding: 0 30rpx;
      flex: 1;
      overflow: auto;
      .no-data {
        padding-top: 150rpx;
        text-align: center;
        .no-text {
          font-size: 30rpx;
          text {
            color: #868aff;
          }
        }
      }
      .list {
        padding-top: 40rpx;
      }
      .card {
        display: flex;
        align-items: center;
        margin-bottom: 40rpx;
        height: 160rpx;
        background: rgba(255, 255, 255, 1);
        box-shadow: 0 5rpx 18rpx 2rpx rgba(204, 204, 204, 0.15);
        border-radius: 10rpx;
        padding: 20rpx 40rpx;
        image {
          width: 80rpx;
          height: 80rpx;
          margin-right: 30rpx;
        }
        .intro {
          flex: 1;
          padding-right: 30rpx;
          overflow: hidden;
        }
        .label {
          font-size: 36rpx;
          font-family: 'PingFang-SC-Bold';
          color: #2c2c2c;
          font-weight: bold;
          margin-bottom: 6rpx;
        }
        .description {
          font-size: 24rpx;
          font-family: 'PingFang-SC-Regular';
          color: #999999;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }
        .actions {
          text-align: right;
          .time {
            color: #999999;
            font-size: 22rpx;
          }
          .setting {
            position: relative;
            right: -30rpx;
            bottom: -10rpx;
            padding: 30rpx;
            width: 40rpx;
            height: 40rpx;
            margin-right: 0;
          }
        }
      }
    }
  }
</style>
