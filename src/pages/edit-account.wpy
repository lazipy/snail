<template>
  <view class="container">
    <form>
      <view class="cu-form-group">
        <view class="title">标题</view>
        <input type="text"
               value="{{formData.title}}"
               placeholder="请输入账号标题"
               @input="inputChange('title')" />
      </view>
      <view class="cu-form-group">
        <view class="title">账号</view>
        <input type="text"
               value="{{formData.number}}"
               placeholder="请输入账号"
               @input="inputChange('number')" />
      </view>
      <view class="cu-form-group">
        <view class="title">密码<text>（非必填）</text></view>
        <input type="password"
               wx:if="{{formData.hidden}}"
               value="{{formData.password}}"
               placeholder="请输入密码"
               @input="inputChange('password')" />
        <input type="text"
               wx:if="{{!formData.hidden}}"
               value="{{formData.password}}"
               placeholder="请输入密码"
               @input="inputChange('password')" />
      </view>
      <view class="cu-form-group">
        <view class="title">密码是否密文显示</view>
        <switch class="blue sm"
                checked="{{formData.hidden}}"
                type="switch"
                @change="switchChange"></switch>
      </view>
      <view class="cu-form-group">
        <view class="title">密码提示信息</view>
        <input type="text"
               value="{{formData.description}}"
               placeholder="请输入密码提示信息"
               @input="inputChange('description')" />
      </view>
    </form>
    <view class="cu-list menu">
      <view class="cu-item arrow solid-top"
            @tap="show">
        <view class="content">
          <text style="color: #333333;">类型</text>
          <view style="color: #555;"
                wx:if="{{formData.groupName}}">{{formData.groupName}}</view>
          <view style="color: #888;"
                wx:else>请选择类型</view>
        </view>
      </view>
    </view>
    <button class="cu-btn bg-blue block lg btn-logout margin-lg"
            @tap="submit">确认提交</button>
    <i-message id="message" />
    <!-- picker -->
    <view class="picker-wrap {{visible && 'show'}}">
      <view class="masker {{visible && 'show'}}"
            @tap="cancel"></view>
      <view class="content {{visible && 'show'}}">
        <view class="actions border-b">
          <button class="cancel"
                  @tap="cancel">取消</button>
          <button class="sure"
                  @tap="sure">确定</button>
        </view>
        <picker-view class="picker"
                     value="{{value}}"
                     indicator-style="height: 44px;"
                     bindchange="bindChange">
          <picker-view-column>
            <repeat for="{{groupList}}"
                    key="index"
                    index="index"
                    item="item">
              <view class="item"
                    style="height: 44px;line-height: 44px">{{item}}</view>
            </repeat>
          </picker-view-column>
        </picker-view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { $Message } from '../iview/base/index'
  import { editAccount } from '../services/account'

  export default class AddAccount extends wepy.page {
    config = {
      navigationBarTitleText: '添加账号'
    }
    data = {
      userInfo: null,
      groups: [],
      accounts: [],
      flagAccounts: [],
      accountIndex: -1,
      flagIndex: -1,
      accountInfo: null,
      visible: false,
      value: [0],
      groupIds: [],
      groupList: [],
      formData: {
        id: '',
        userId: '',
        title: '',
        groupId: '',
        groupName: '',
        number: '',
        password: '',
        description: '',
        hidden: true
      }
    }
    onLoad(options) {
      this.userInfo = wx.getStorageSync('userInfo')
      this.groups = wx.getStorageSync('groups')
      this.accounts = wx.getStorageSync('accounts')
      this.flagAccounts = wx.getStorageSync('flagAccounts')

      this.flagIndex = this.flagAccounts.findIndex(item => item._id === options.id)

      this.accountIndex = this.accounts.findIndex(item => item._id === options.id)
      this.accountInfo = this.accounts.find(item => item._id === options.id)

      this.formData.userId = this.userInfo._id
      this.formData.id = this.accountInfo._id
      this.formData.title = this.accountInfo.title
      this.formData.groupId = this.accountInfo.group_id
      this.formData.groupName = this.accountInfo.group_name
      this.formData.number = this.accountInfo.number
      this.formData.password = this.accountInfo.password
      this.formData.description = this.accountInfo.description
      this.formData.hidden = this.accountInfo.hidden

      this.groupIds = this.groups.map(item => item._id)
      this.groupList = this.groups.map(item => item.name)
    }
    methods = {
      inputChange(key, e) {
        this.formData[key] = e.detail.value
      },
      switchChange(e) {
        this.formData.hidden = e.detail.value
      },
      show() {
        this.visible = true
      },
      cancel() {
        this.visible = false
      },
      bindChange(e) {
        this.value = e.detail.value
      },
      sure() {
        this.visible = false
        this.formData.groupId = this.groupIds[this.value[0]]
        this.formData.groupName = this.groupList[this.value[0]]
      },
      async submit() {
        if (!this.formData.title) {
          wx.showToast({ title: '请输入账号标题', icon: 'none' })
          return
        }
        if (!this.formData.number) {
          wx.showToast({ title: '请输入账号', icon: 'none' })
          return
        }
        if (!this.formData.description) {
          wx.showToast({ title: '请输入密码提示信息', icon: 'none' })
          return
        }
        if (!this.formData.groupId) {
          wx.showToast({ title: '请选择类型', icon: 'none' })
          return
        }
        wx.showLoading({ title: '提交中...', mask: true })
        editAccount(this.formData)
          .then(res => {
            wx.hideLoading()
            if (res.head.code === 1) {
              const group = this.groups.filter(item => item._id === this.formData.groupId)[0]
              console.log(group)
              this.accounts[this.accountIndex] = res.body.data
              this.accounts[this.accountIndex].logo = group.logo
              wx.setStorageSync('accounts', this.accounts)
              if (this.flagIndex !== -1) {
                this.flagAccounts[this.flagIndex] = res.body.data
                this.flagAccounts[this.flagIndex].logo = group.logo
                wx.setStorageSync('flagAccounts', this.flagAccounts)
              }
              $Message({
                content: '修改账号成功',
                type: 'success'
              })
              setTimeout(() => {
                wx.navigateBack({
                  delta: 1
                })
              }, 800)
            } else {
              $Message({
                content: res.head.message,
                type: 'error'
              })
            }
          })
          .catch(err => {
            console.log(err)
          })
      }
    }
  }
</script>

<style lang="scss" scoped>
  .container {
    min-height: 100vh;
    line-height: 1;
    background-color: #f2f2f2;
    .cu-item.arrow {
      position: relative;
      &::after {
        content: ' ';
        width: 200%;
        height: 200%;
        position: absolute;
        top: 0;
        left: 0;
        border-radius: inherit;
        transform: scale(0.5);
        transform-origin: 0 0;
        pointer-events: none;
        box-sizing: border-box;
        border-top: 1rpx solid rgba(0, 0, 0, 0.1);
      }
      .content {
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
    }
    .cu-form-group input {
      text-align: right;
      padding-right: 0;
    }
  }
  .picker-wrap {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 999;
    transition: all 0.2s ease-in-out;
    &.show {
      top: 0;
    }

    .masker {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      background: rgba(0, 0, 0, 0.5);
      transition: all 0.2s ease-in-out;
      opacity: 0;
      visibility: hidden;

      &.show {
        opacity: 1;
        visibility: visible;
      }
    }
    .content {
      position: absolute;
      left: 0;
      bottom: 0;
      width: 100%;
      background-color: #f7f7f7;
      color: #333333;
      text-align: center;
      transform: translate3d(0, 100%, 0);
      transform-origin: center;
      transition: all 0.2s ease-in-out;
      visibility: hidden;

      &.show {
        transform: translate3d(0, 0, 0);
        visibility: visible;
      }
    }
    .actions {
      display: flex;
      align-items: center;
      justify-content: space-between;
      background-color: #fff;
      button {
        width: 150rpx;
        height: 50px;
        margin-left: 0;
        margin-right: 0;
        font-size: 30rpx;
        font-weight: bold;
        background-color: transparent;
        &::after {
          border: none;
        }
      }
      .cancel {
        color: #666666;
      }
      .sure {
        color: #1890ff;
      }
    }
    .picker {
      height: 40vh;
      background-color: #fff;
    }
    .item {
      background-color: #fff;
      color: #333333;
    }
  }
</style>
