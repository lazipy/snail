<template>
  <view class="container">
    <view class="cu-bar search bg-white solid-bottom">
      <view class="search-form round">
        <text class="icon-search"></text>
        <input type="text"
               placeholder="请输入账号标题"
               value="{{keyword}}"
               @input="changeKeyword"
               confirm-type="search"></input>
      </view>
      <view class="action">
        <button class="cu-btn bg-green shadow-blur round"
                @tap="search">搜索</button>
      </view>
    </view>
    <!-- content body -->
    <view class="content">
      <!-- no-data -->
      <view class="no-data"
            wx:if="{{accounts.length === 0}}">
        <image class="icon"
               src="../assets/img/no-account.png"
               mode="scaleToFill"
               lazy-load="false">
        </image>
        <view class="text text-gray"
              @tap="addAccount">您暂无账号，<text class="text-blue">请添加</text></view>
      </view>
      <view class="list"
            wx:else>
        <repeat for="{{accounts}}"
                key="index"
                index="index"
                item="item">
          <view class="card shadow margin-bottom-lg bg-white">
            <view class="header solid-bottom"
                  @tap="checkDetail({{item}})">
              <image class="icon"
                     src="{{item.logo || '../assets/img/icon-type.png'}}"
                     mode="scaleToFill"
                     lazy-load="false">
              </image>
              <view class="title text-cut">{{item.title}}</view>
              <image class="arrow"
                     src="../assets/img/arrow.png"
                     mode="scaleToFill"
                     lazy-load="false">
              </image>
            </view>
            <view class="body">
              <view class="cell">
                <view class="label">账号</view>
                <view class="value text-cut">{{item.number}}</view>
              </view>
              <view class="cell"
                    wx:if="{{item.password}}">
                <view class="label">密码</view>
                <view class="value text-cut">{{item.hidden ? '******' : item.password}}</view>
                <image wx:if="{{item.hidden}}"
                       @tap="toggle({{item}})"
                       class="eye"
                       src="../assets/img/eye.png"
                       mode="scaleToFill"
                       lazy-load="false">
                </image>
                <image wx:else
                       class="eye"
                       @tap="toggle({{item}})"
                       src="../assets/img/eye-open.png"
                       mode="scaleToFill"
                       lazy-load="false">
                </image>
              </view>
            </view>
          </view>
        </repeat>
      </view>
      <!-- 加载 -->
      <view class='cu-load load-modal'
            wx:if="{{loadModal}}">
        <image src='../assets/img/logo.png'
               class='png'
               mode='aspectFit'></image>
        <view class='gray-text'>加载中...</view>
      </view>
    </view>
    <!-- TabBar -->
    <tab-bar current="Home" />
  </view>
</template>

<script>
  import wepy from 'wepy'
  import TabBar from '../components/TabBar'
  import { queryAccounts, queryFlagAccounts } from '../services/account'
  import { queryGroups } from '../services/group'

  export default class Home extends wepy.page {
    config = {
      navigationBarTitleText: '蜗牛账号管家',
      navigationBarTextStyle: 'white'
    }

    components = {
      'tab-bar': TabBar
    }

    data = {
      loadModal: false,
      userInfo: null,
      keyword: '',
      accounts: []
    }

    onLoad() {
      wx.hideTabBar()
      this.userInfo = wx.getStorageSync('userInfo')
      if (!this.userInfo) {
        wx.reLaunch({ url: './login' })
      } else if (!this.userInfo.mobile) {
        wx.reLaunch({ url: './login' })
      } else {
        this.getData()
      }
    }

    onShow() {
      const accounts = wx.getStorageSync('accounts')
      if (accounts) {
        this.accounts = accounts
      }
    }

    methods = {
      changeKeyword(e) {
        this.keyword = e.detail.value
      },
      search() {
        if (!this.keyword) {
          this.accounts = wx.getStorageSync('accounts')
        } else {
          this.accounts = this.accounts.filter(item => item.title.includes(this.keyword))
        }
      },
      addAccount() {
        wx.navigateTo({
          url: './add-account'
        })
      },
      checkDetail(val) {
        wx.navigateTo({
          url: `./account-detail?id=${val._id}`
        })
      },
      toggle(val) {
        let index = this.accounts.findIndex(item => item._id === val._id)
        if (val.hidden) {
          this.accounts[index].hidden = false
        } else {
          this.accounts[index].hidden = true
        }
      }
    }

    getData() {
      this.loadModal = true
      Promise.all([
        queryAccounts(this.userInfo._id),
        queryFlagAccounts(this.userInfo._id),
        queryGroups(this.userInfo._id)
      ])
        .then(res => {
          this.loadModal = false
          this.accounts = res[0].body.data.map(item => {
            let group = res[2].body.data.find(val => val._id === item.group_id)
            item.logo = group.logo
            return item
          })
          wx.setStorageSync('accounts', res[0].body.data)
          wx.setStorageSync('flagAccounts', res[1].body.data)
          wx.setStorageSync('groups', res[2].body.data)
          this.$apply()
        })
        .catch(err => {
          console.log(err)
        })
    }
  }
</script>

<style lang="scss" scoped>
  .container {
    display: flex;
    flex-direction: column;
    height: 100vh;
    padding-bottom: 100rpx;
    background-color: #fff;
  }
  .content {
    flex: 1;
    overflow: auto;
    padding-bottom: 35rpx;
    .no-data {
      height: 100%;
      text-align: center;
      padding-top: 200rpx;
      image {
        width: 400rpx;
        height: 400rpx;
      }
      .text {
        padding: 20rpx;
        font-size: 28rpx;
      }
    }
    .list {
      padding: 30rpx;
      .header {
        display: flex;
        align-items: center;
        height: 100rpx;
        line-height: 100rpx;
        padding: 30rpx;
        .icon {
          width: 60rpx;
          height: 60rpx;
        }
        .title {
          margin-left: 20rpx;
          flex: 1;
          color: #333333;
          font-weight: bold;
        }
        .arrow {
          width: 48rpx;
          height: 48rpx;
        }
      }
      .body {
        padding: 30rpx 0;
        .cell {
          display: flex;
          align-items: center;
          height: 60rpx;
          line-height: 60rpx;
          margin-bottom: 30rpx;
          padding: 0 30rpx;
          &:last-child {
            margin-bottom: 0;
          }
          .label {
            color: #333333;
          }
          .value {
            flex: 1;
            color: #333333;
            text-align: right;
          }
          .eye {
            margin-left: 20rpx;
            width: 50rpx;
            height: 50rpx;
            padding: 5rpx;
          }
        }
      }
    }
  }
</style>
