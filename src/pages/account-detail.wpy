<template>
  <view class="container">
    <view class="cell-group">
      <view class="cell">
        <view class="label">标题</view>
        <view class="value">{{accountInfo.title}}</view>
      </view>
      <view class="cell"
            @tap="copy({{accountInfo.number}}, '账号')">
        <view class="label">账号</view>
        <view class="value">{{accountInfo.number}}</view>
      </view>
      <view class="cell"
            @tap="copy({{accountInfo.password}}, '密码')"
            wx:if="{{accountInfo.password}}">
        <view class="label">密码</view>
        <view class="value">{{!current ? '******' : accountInfo.password}}</view>
        <image @tap="closeCurrent"
               wx:if="{{current}}"
               class="copy"
               src="../assets/img/eye.png"
               mode="scaleToFill"
               lazy-load="false">
        </image>
        <image @tap="toggleCurrent"
               wx:if="{{!current}}"
               class="copy"
               src="../assets/img/close.png"
               mode="scaleToFill"
               lazy-load="false">
        </image>
      </view>
      <view class="cell">
        <view class="label">密码提示</view>
        <view class="value">{{accountInfo.description}}</view>
      </view>
      <view class="cell">
        <view class="label">类型</view>
        <view class="value">{{accountInfo.group_name}}</view>
      </view>
      <view class="cell">
        <view class="label">密码是否密文显示</view>
        <view class="value">{{accountInfo.hidden ? '是' : '否'}}</view>
      </view>
      <view class="cell">
        <view class="label">创建时间</view>
        <view class="value">{{accountInfo.created_at}}</view>
      </view>
    </view>
    <view class="actions">
      <view class="flag"
            @tap="updateData"
            plain>
        <image wx:if="{{!accountInfo.flag}}"
               class="star"
               src="../assets/img/no-star.png"
               mode="scaleToFill"
               lazy-load="false">
        </image>
        <image wx:else
               class="star"
               src="../assets/img/star.png"
               mode="scaleToFill"
               lazy-load="false">
        </image>
      </view>
      <button class="delete"
              @tap="deleteData">删除</button>
      <button class="edit"
              @tap="editAccount">编辑账号</button>
    </view>
    <i-message id="message" />
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { $Message } from '../iview/base/index'
  import { queryAccountById, updateAccount, deleteAccount } from '../services/account'

  export default class AccountDetail extends wepy.page {
    config = {
      navigationBarTitleText: '账号详情'
    }
    data = {
      accountId: '',
      current: false,
      accountInfo: null
    }
    onLoad(options) {
      this.accountId = options.id
    }
    onShow() {
      this.getData(this.accountId)
    }
    methods = {
      toggleCurrent(index) {
        this.current = true
      },
      closeCurrent() {
        this.current = false
      },
      copy(data, key) {
        wx.setClipboardData({
          data,
          success() {
            wx.showToast({ title: `${key}已复制` })
          }
        })
      },
      editAccount() {
        wx.navigateTo({
          url: `./edit-account?accountId=${this.accountInfo._id}`
        })
      }
    }
    // 获取数据
    getData(id) {
      wx.showLoading({ title: '加载中...', mask: true })
      queryAccountById(id)
        .then(res => {
          wx.hideLoading()
          this.accountInfo = res.data
          this.current = !this.accountInfo.hidden
          this.$apply()
        })
        .catch(err => {
          console.log(err)
        })
    }
    updateData() {
      const flag = this.accountInfo.flag ? 0 : 1
      updateAccount(Object.assign({}, this.accountInfo, { flag }))
        .then(res => {
          this.accountInfo.flag = flag
          this.$apply()
        })
        .catch(err => {
          console.log(err)
        })
    }
    deleteData() {
      const _self = this
      wx.showModal({
        title: '提示',
        content: '您确定要删除该账号吗？',
        cancelColor: '#999999',
        confirmColor: '#6f7bfd',
        success(res) {
          if (res.confirm) {
            wx.showLoading({ title: '删除中...', mask: true })
            deleteAccount(_self.accountInfo._id)
              .then(res => {
                wx.hideLoading()
                $Message({
                  content: '删除账号成功',
                  type: 'success'
                })
                setTimeout(() => {
                  wx.navigateBack({
                    delta: 1
                  })
                }, 800)
              })
              .catch(err => {
                $Message({
                  content: '删除账号失败',
                  type: 'error'
                })
                console.log(err)
              })
          }
        }
      })
    }
  }
</script>

<style lang="scss" scoped>
  .container {
    display: flex;
    flex-direction: column;
    height: 100vh;
    line-height: 1;
    background-color: #f2f2f2;
    .cell-group {
      flex: 1;
      overflow: auto;
      margin-bottom: 20rpx;
      .cell {
        padding: 0 30rpx;
        position: relative;
        display: flex;
        justify-content: space-between;
        align-items: center;
        height: 108rpx;
        background-color: #fff;
        &:not(:last-child)::after {
          position: absolute;
          content: ' ';
          width: 100%;
          left: 0;
          bottom: 0;
          height: 1px;
          background-color: #e5e5e5;
          -webkit-transform: scale(1, 0.5);
          transform: scale(1, 0.5);
          -webkit-transform-origin: center bottom;
          transform-origin: center bottom;
        }
        .label {
          font-family: 'PingFang-SC-Medium';
          font-size: 30rpx;
          color: #333333;
          text {
            color: #999999;
          }
        }
        input {
          margin-left: 30rpx;
          flex: 1;
          font-family: 'PingFang-SC-Regular';
          font-size: 30rpx;
          height: 74rpx;
          line-height: 74rpx;
          color: #999999;
          text-align: right;
        }
        switch {
          transform-origin: right center;
          transform: scale(0.7);
        }
        .value {
          margin-left: 30rpx;
          flex: 1;
          font-family: 'PingFang-SC-Regular';
          font-size: 30rpx;
          color: #999999;
          text-align: right;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }
        .copy {
          width: 40rpx;
          height: 40rpx;
          margin-left: 20rpx;
          padding: 12rpx;
        }
        .placeholder {
          margin-left: 30rpx;
          flex: 1;
          font-family: 'PingFang-SC-Regular';
          font-size: 30rpx;
          color: #cccccc;
          text-align: right;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }
        .arrow {
          width: 12rpx;
          height: 24rpx;
          margin-left: 13rpx;
        }
      }
    }
    .actions {
      display: flex;
      align-items: center;
      height: 120rpx;
      background-color: #fff;
      button {
        margin: 0;
        height: 120rpx;
        line-height: 120rpx;
        font-family: 'PingFang-SC-Medium';
        font-weight: 500;
        font-size: 36rpx;
        border-radius: 0;
        &::after {
          border: none;
        }
      }
    }
    .flag {
      width: 25%;
      padding-top: 30rpx;
      height: 120rpx;
      font-family: 'PingFang-SC-Medium';
      text-align: center;
      .star {
        width: 60rpx;
        height: 60rpx;
      }
    }
    .delete {
      width: 25%;
      background: #ed3f14;
      color: #ffffff;
    }
    .edit {
      width: 50%;
      background: linear-gradient(to left, #6f7bfd, #51a6fd), linear-gradient(to bottom, #ff7373, #ff7373);
      color: #ffffff;
    }
  }
</style>
